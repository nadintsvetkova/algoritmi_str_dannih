import copy


def trans(a, n, m):
    b = [0] * m
    for k in range(m):
        b[k] = [k] * n
    for i in range(n):
        for j in range(m):
            b[j][i] = a[i][j]
    return b     


def multi(a, n1, m1, b, n2, m2):
    if m1 != n2:
        return False
    c = [0] * n1
    b = trans(b, n2, m2)
    for k1 in range(n1):
        c[k1] = [0] * m2
    for i in range(n1):
        for j in range(m2):
            for k in range(m1):
                c[i][j] += a[i][k] * b[j][k]
    return c


def rang(a, n, m):
    res = n
    c = copy.deepcopy(a)
    d = copy.deepcopy(a)        
    for i in range(n):
        for j in range(i + 1, n):
            s = d[j]
            d = copy.deepcopy(c)
            print(i, j)
            for k in range(i, m):
                if d[j][i] != 0 and d[i][i] != 0:                                                          
                    c[i][k] = c[i][k] * d[j][i]
                    c[j][k] = d[j][k] * d[i][i]
            b = 0
            if d[j][i] != 0 and d[i][i] != 0:                                                                      
                for k1 in range(m):
                    s[k1] = c[i][k1] - c[j][k1]
                    print("s", s)
                    if s[k1] == 0:
                        b += 1
            else:
                if d[i][i] == 0:
                    for k in range(m):
                        if d[i][k] == 0:
                            b += 1
            c[j] = s
            if b == m:
                res -= 1
    b = 0
    for k in range(m):
        if a[n - 1][k] == 0:
            b += 1
    if b == m:
        res -= 1            
    if res == 0:
        res = 1        
    return res

        
n, m = input().split()
n = int(n)
m = int(m)
a = [0] * n
for i in range(n):
    s = []
    s = input().split()
    for j in range(m):
        s[j] = int(s[j])
    a[i] = s

n1, m1 = input().split()
n1 = int(n1)
m1 = int(m1)
b = [0] * n1
for i in range(n1):
    s1 = []
    s1 = input().split()
    for j in range(m1):
        s1[j] = int(s1[j])
    b[i] = s1
   
print("Транспонирование", trans(a, n, m))
print("Умножение", multi(a, n, m, b, n1, m1))
print("Ранг матрицы", rang(a, n, m))
